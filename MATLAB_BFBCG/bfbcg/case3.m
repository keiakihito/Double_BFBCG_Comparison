format long g

mtxA = single([
                        10.840188, 0.394383, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.394383, 10.783099, 0.798440, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.798440, 10.911648, 0.197551, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.197551, 10.335223, 0.768230, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.768230, 10.277775, 0.553970, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.553970, 10.477397, 0.628871, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.628871, 10.364784, 0.513401, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.513401, 10.952229, 0.916195, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.916195, 10.635712, 0.717297, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.717297, 10.141603, 0.606969, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.606969, 10.016300, 0.242887, 0.000000, 0.000000, 0.000000, 0.000000 ;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.242887, 10.137232, 0.804177, 0.000000, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.804177, 10.156679, 0.400944, 0.000000, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.400944, 10.129790, 0.108809, 0.000000;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.108809, 10.998924, 0.218257;
                        0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.218257, 10.512933;

]);


mtxBT = [
                 -0.828583, -0.206065, -0.357603, 0.477982, -0.268613, -0.063139, 0.296667, -0.326744, 0.445940, -0.912228, 0.211429, 0.346067, 0.664094, 0.893560, 0.828269, -0.867125;
                 -0.394889, 0.143599, -0.608832, 0.495604, -0.445249, 0.363128, 0.031231, -0.144173, -0.497560, 0.282189, 0.928123, 0.864081, 0.645952, 0.110728, -0.585657, 0.817369;
                 0.904663, 0.056740, 0.295351, -0.363950, 0.993600, -0.407982, 0.309307, 0.439540, -0.320210, -0.479264, -0.214393, -0.656116, -0.585704, -0.386123, -0.523241, 0.019407;
                 0.757476, -0.132072, -0.484989, -0.687773, -0.768944, 0.546242, 0.168054, -0.266504, -0.171569, 0.096177, -0.402423, -0.525617, -0.793095, 0.011920, -0.708248, -0.888432;
                 -0.931341, 0.587103, -0.252382, -0.937740, -0.820880, -0.943076, 0.501800, -0.141089, -0.422340, -0.712593, 0.202795, -0.008043, -0.098716, 0.679554, -0.988636, -0.341239;
                 -0.452518, -0.473626, -0.029012, -0.221463, -0.927384, -0.860959, 0.512033, -0.098953, 0.235218, -0.890390, 0.375430, 0.442123, 0.121529, 0.667182, 0.553691, 0.190189;
                 0.254284, -0.698691, 0.252448, 0.433405, -0.641767, -0.245752, -0.707684, -0.064107, 0.041656, 0.495110, 0.927850, 0.942940, 0.174664, 0.939214, -0.398299, 0.722146;
                 -0.534412, 0.572688, -0.499316, -0.461795, 0.711730, -0.987283, 0.439252, -0.053052, -0.877674, -0.185318, -0.610929, 0.243856, -0.518136, 0.942762, -0.565955, 0.736148;
                 -0.755929, 0.686493, 0.169553, -0.397696, -0.559259, 0.461869, 0.538197, 0.482397, -0.043021, 0.466047, 0.425337, -0.868356, 0.405261, -0.972962, 0.853790, 0.870849;
                 0.599726, -0.645527, -0.590946, 0.311456, -0.632810, 0.848306, -0.741596, -0.510484, -0.337012, -0.352525, 0.733372, 0.144852, -0.409763, -0.832583, -0.118999, -0.165692;
                 0.853910, -0.949446, 0.436612, -0.705348, 0.512423, -0.025191, 0.777049, -0.530598, -0.559144, 0.202386, -0.398954, 0.846117, 0.229424, -0.545165, 0.716966, -0.170850;
                 -0.190692, -0.873980, -0.859394, 0.176498, 0.974326, -0.600990, 0.666015, -0.362686, 0.046485, 0.399387, 0.782166, 0.636723, 0.566804, -0.336833, -0.528969, 0.420714;
                 -0.286279, 0.907642, 0.715365, -0.773856, -0.117549, 0.492414, -0.304454, 0.323307, -0.305200, 0.296592, 0.169424, 0.924224, 0.751427, -0.113610, -0.246626, -0.439265;
                 0.012410, -0.106020, 0.737234, -0.013265, 0.292990, 0.403248, 0.624049, -0.660524, -0.197365, 0.406215, 0.976199, -0.630561, -0.930618, -0.552771, 0.790152, -0.216897;
                 -0.645129, 0.505517, 0.009247, 0.237322, -0.002069, 0.704793, -0.439371, 0.692731, 0.001385, 0.730053, 0.616955, -0.247188, -0.383557, -0.629671, 0.313547, 0.628853;
             ];
mtxB = mtxBT';

mtxSolX = mtxB;

threshold = 1e-6;


% R <- B -AX
mtxR =  mtxB - mtxA * mtxSolX;
fprintf("\n\n~~mtxR~~\n\n");
disp(mtxR);

%Calculate original residual for the relative redsidual during the iteration
orgRsdl = calculateResidual(mtxR);
fprintf("\n\n~~Original residual: %f~~\n\n", orgRsdl);

% Z <- M * R
mtxZ = mtxR;
fprintf("\n\n~~mtxZ~~\n\n");
disp(mtxZ);

%P <- orth(Z)
mtxP = orth(mtxZ, threshold);
fprintf("\n\n~~mtxP~~\n\n");
disp(mtxP);

for wkr = 1 : 2
    %Q <- AP
    mtxQ = mtxA * mtxP;
    fprintf("\n\n~~mtxQ~~\n\n");
    disp(mtxQ);

    %Set up (P'Q)^{-1}, (P'R)
    mtxPTQ = mtxP' * mtxQ;
    fprintf("\n\n~~mtxPTQ~~\n\n");
    disp(mtxPTQ);
    mtxPTQ_Inv = inv(mtxPTQ);
    fprintf("\n\n~~mtxPTQ_Inv~~\n\n");
    disp(mtxPTQ_Inv);

    mtxPTR = mtxP' * mtxR;
    fprintf("\n\n~~mtxP'R~~\n\n");
    disp(mtxPTR);

    %Aplha <- (P'Q)^{-1} * (P'R)
    mtxAlph = mtxPTQ_Inv * mtxPTR;
    fprintf("\n\n~~mtxAlph~~\n\n");
    disp(mtxAlph);

    %X_{i+1} <- x_{i} + P * alpha
    mtxSolX = mtxSolX + (mtxP * mtxAlph);
    fprintf("\n\n~~mtxSolX~~\n\n");
    disp(mtxSolX);

    %R_{i+1} <- R_{i} - Q * alpha
    mtxR = mtxR - (mtxQ * mtxAlph);
    fprintf("\n\n~~mtxR~~\n\n");
    disp(mtxR);

    % Calculate relative residue
    crrntRsdl = calculateResidual(mtxR);
    rltvRsdl = crrntRsdl / orgRsdl;
    fprintf("\n\n~~relative residue: %f~~~ \n\n", rltvRsdl);

    %If converged within tol, then stop

    %Z <- MR
    mtxZ = mtxR;
    fprintf("\n\n~~mtxZ~~\n\n");
    disp(mtxZ);

    %(Q'Z)
    mtxQTZ = (mtxQ' * mtxZ);
    fprintf("\n\n~~mtxQTZ~~\n\n");
    disp(mtxQTZ);

    %beta <- -(P'Q)^{-1} * (Q'Z)
    mtxBta = -(mtxPTQ_Inv) * mtxQTZ;
    fprintf("\n\n~~mtxBta~~\n\n");
    disp(mtxBta);

    %mtxZ + P * beta
    mtxZ_pls_PBta = mtxZ + mtxP * mtxBta;
    fprintf("\n\n~~mtxZ + p * beta~~\n\n");
    disp(mtxZ_pls_PBta);

    %P_{i+1} <- orth(Z + P*beta)
    mtxP = orth((mtxZ + mtxP * mtxBta), threshold);
    fprintf("\n\n~~mtxP~~\n\n");
    disp(mtxP);
end

fprintf("\n\n~~After iteration~~\n");
fprintf("\n~~mtxX_Sol~~\n\n");
disp(mtxSolX);

